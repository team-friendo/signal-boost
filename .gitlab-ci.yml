###########
# ANCHORS #
###########

.mr-only:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

.sb-job:
  image: registry.0xacab.org/team-friendo/signalboost/signalboost:latest
  extends: .mr-only
  cache:
    key: sb_build
    paths:
      - node_modules
      - .yarn
  before_script:
    - yarn config set cache-folder .yarn
    - yarn install
  variables:
    NODE_ENV: test
    POSTGRES_DB: signalboost_test

.sc-job:
  image: registry.0xacab.org/team-friendo/signalboost/signalc:latest
  extends: .mr-only
  cache:
    key: sc_build
    paths:
      - .gradle
      - signalc/build
  before_script:
    - export GRADLE_USER_HOME=`pwd`/.gradle
  variables:
    SIGNALC_ENV: test # TODO: let's change this to `ci` soon?
    POSTGRES_DB: signalc_test
    SIGNALC_DB_NAME: signalc_test

.uses-postgres:
  services:
    - name: postgres:12
      alias: db
  variables:
    DB_HOST: db
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: ""
    POSTGRES_HOST_AUTH_METHOD: trust

##########
# STAGES #
##########

stages:
  - test
  # - deploy (coming soon!)

########
# JOBS #
########

sb:lint:
  stage: test
  extends:
    - .sb-job
  script:
    - npx eslint app && npx eslint test

sb:unit:
  stage: test
  extends:
    - .sb-job
    - .uses-postgres
  script:
    - npx sequelize db:migrate --env test
    - find test/unit -name '*.spec.js' | shuf | xargs npx mocha -R spec -r babel-register --reporter dot --exit

sb:integration:
  stage: test
  extends:
    - .sb-job
    - .uses-postgres
  variables:
    INTEGRATION_TEST: 1
  script:
    - npx sequelize db:migrate --env test
    - find test/integration -name '*.spec.js' | shuf | xargs npx mocha -R spec -r babel-register --reporter dot --exit


sc:test:
  stage: test
  extends:
    - .sc-job
    - .uses-postgres
  script:
    - cd signalc
    - gradle update
    - gradle test
