variables:
  NODE_ENV: test
  POSTGRES_DB: signalboost_test
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: ""
  POSTGRES_HOST_AUTH_METHOD: trust
  SB_IMAGE: registry.0xacab.org/team-friendo/signalboost/signalboost:latest
  SC_IMAGE: registry.0xacab.org/team-friendo/signalboost/signalc:latest

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

cache:
  paths:
    - node_modules/
    - .gradle/wrapper
    - .gradle/caches

stages:
  - build
  - test

################
# shared logic #
################

.mr-only:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

.uses-postgres:
  services:
    - name: postgres:12
      alias: db

###############
# BUILD STAGE #
###############

build:sb:
  stage: build
  image: $SB_IMAGE
  extends:
    - .mr-only
    - .uses-postgres
  script:
    - yarn install
    - npx sequelize db:migrate --env test

build:sc:
  stage: build
  image: $SC_IMAGE
  extends:
    - .mr-only
  script:
    - cd signalc
    - gradle build

##############
# TEST STAGE #
##############

test:sb_lint:
  image: $SB_IMAGE
  stage: test
  extends:
    - .mr-only
  script:
    - npx eslint app && npx eslint test

test:sb_unit:
  stage: test
  image: $SB_IMAGE
  extends:
    - .mr-only
    - .uses-postgres
  script:
    - NODE_ENV=test npx mocha ./test/unit  -name '*.spec.js' --recursive -r babel-register --reporter dot --exit

test:sb_integration:
  stage: test
  image: $SB_IMAGE
  extends:
    - .mr-only
    - .uses-postgres
  variables:
    INTEGRATION_TEST: 1
  script:
    - NODE_ENV=test npx mocha ./test/integration  -name '*.spec.js' --recursive -r babel-register --reporter dot --exit

test:sc:
  stage: test
  image: $SC_IMAGE
  extends: .mr-only
  script:
    - cd signalc
    - gradle test
