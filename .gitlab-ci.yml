variables:
  NODE_ENV: test
  POSTGRES_DB: signalboost_test
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: ""
  POSTGRES_HOST_AUTH_METHOD: trust

cache:
  paths:
    - node_modules/
    # TODO: how to actually cache these?
    - signalc/build/kotlin
    - signalc/build/classes

x-sb_image: &sb_image
  image: registry.0xacab.org/team-friendo/signalboost/sibnalboost:latest
x-sc_image: &sc_image
  image: registry.0xacab.org/team-friendo/signalboost/sibnalc:latest


###############
# BUILD STAGE #
###############

build:sb:
  <<: *sb_image
  stage: build
  script:
    - yarn install
    - npx sequelize db:migrate --env test

build:sc:
  <<: *sc_image
  stage: build
  script:
    - cd /signalboost/signalc
    - ./gradlew build

##############
# TEST STAGE #
##############

test:sb_lint:
  <<: *sb_image
  stage: test
  script:
    - npx eslint app && npx eslint test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

test:sb_unit:
  <<: *sb_image
  stage: test
  services:
    - name: postgres:12
      alias: db
  script:
    - NODE_ENV=test npx mocha ./test/unit  -name '*.spec.js' --recursive -r babel-register --reporter dot --exit
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

test:sb_integration:
  <<: *sb_image
  stage: test
  variables:
    INTEGRATION_TEST: 1
  services:
    - name: postgres:12
      alias: db
  script:
    - NODE_ENV=test npx mocha ./test/integration  -name '*.spec.js' --recursive -r babel-register --reporter dot --exit
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

test:sc:
  <<: *sc_image
  stage: test
  script:
    - cd /signalboost/signalc
    - ./gradlew test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'