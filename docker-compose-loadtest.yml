version: '3.4'

# NOTE:
#
# we create a `localdev` network w/ a non-standard subnet mask to be able to use
# use docker from behdind a VPN, which is often necessary to auth w/ Signal.
# (see: https://github.com/docker/for-linux/issues/418#issuecomment-491323611)
#
# USAGE:
#
# for this to work you must first run the following (which is done automatically
# by `make _.setup`):
#
# ```bash
# docker network create localdev --subnet 10.0.1.0/24
# ```

networks:
  default:
    external:
      name: localdev

volumes:
  loadtest_postgres_data:
  loadtest_receiver_signalc_gradle_cache:
  loadtest_receiver_signalc_build_cache:
  loadtest_receiver_sock:
  loadtest_sender_sock:
  loadtest_sender_signalc_gradle_cache:
  loadtest_sender_signalc_build_cache:
  loadtest_signald_data:


services:

  db:
    image: postgres:12
    container_name: loadtest_db
    volumes:
      - loadtest_postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - 0.0.0.0:5432:5432
    restart: unless-stopped

  receiver_signalc:
    image: registry.0xacab.org/team-friendo/signalboost/signalc:latest
    container_name: loadtest_receiver_signalc
    entrypoint: /signalc/bin/entrypoint/signalc
    env_file: .env.dev
    environment:
      SIGNALC_ENV: ${SIGNALC_ENV:-load}
      SIGNALC_DB_NAME: loadtest_receiver_signalc
      GRADLE_USER_HOME: /home/gradle/.gradle
      LOG_LEVEL: ${LOG_LEVEL:-debug}
      DEBUG_MODE: ${DEBUG_MODE:-0}
      DB_HOST: db
    depends_on:
      - db
    ports:
      - 0.0.0.0:5005:5005 # for remote debugger
    volumes:
      - ./signalc/src:/signalc/src
      - ./signalc/build.gradle.kts:/signalc/build.gradle.kts
      - ./signalc/gradle.properties:/signalc/gradle.properties
      - ./signalc/settings.gradle.kts:/signalc/settings.gradle.kts
      - ./signalc/migrations:/signalc/migrations
      - ./bin:/signalc/bin
      - loadtest_receiver_signalc_gradle_cache:/home/gradle/.gradle
      - loadtest_receiver_signalc_build_cache:/signalc/build
      - loadtest_receiver_sock:/signalc/sock
    restart: unless-stopped

  receiver_driver:
    image: registry.0xacab.org/team-friendo/signalboost/signalboost
    container_name: loadtest_receiver_driver
    depends_on:
      - db
      - receiver_signalc
    entrypoint: "node /signalboost/simulator/receive.js"
    env_file: .env.dev
    environment:
      DB_HOST: db
      SOCKET_POOL_SIZE: 16
      SIGNALBOOST_VERBOSE_LOG: ${SIGNALBOOST_VERBOSE_LOG:-1}
    expose:
      - 3001
    networks:
      - default
    volumes:
      - ./.sequelizerc:/signalboost/.sequelizerc
      - ./app:/signalboost/app
      - ./simulator:/signalboost/simulator
      - ./bin:/signalboost/bin
      - ./node_modules:/signalboost/node_modules
      - ./package.json:/signalboost/package.json
      - ./yarn.lock:/signalboost/yarn.lock
      - loadtest_receiver_sock:/signalboost/sock/
    restart: unless-stopped

  seeder:
    image: registry.0xacab.org/team-friendo/signalboost/signalboost
    container_name: loadtest_simulator
    depends_on:
      - db
    entrypoint: /signalboost/bin/entrypoint/simulator
    env_file: .env.dev
    environment:
      DB_HOST: db
      SOCKET_POOL_SIZE: 4
      SIGNALBOOST_VERBOSE_LOG: ${SIGNALBOOST_VERBOSE_LOG:-1}
    expose:
      - 3001
    networks:
      - default
    volumes:
      - ./.sequelizerc:/signalboost/.sequelizerc
      - ./app:/signalboost/app
      - ./simulator:/signalboost/simulator
      - ./bin:/signalboost/bin
      - ./node_modules:/signalboost/node_modules
      - ./package.json:/signalboost/package.json
      - loadtest_signald_data:/var/lib/signald/data
      - ./yarn.lock:/signalboost/yarn.lock
      - ${SOCK_VOLUME:-loadtest_receiver_sock}:/signalboost/sock/
    restart: unless-stopped

  sender_driver:
    image: registry.0xacab.org/team-friendo/signalboost/signalboost
    container_name: loadtest_sender_driver
    depends_on:
      - db
    env_file: .env.dev
    environment:
      DB_HOST: db
      SOCKET_POOL_SIZE: 16
      SIGNALBOOST_VERBOSE_LOG: ${SIGNALBOOST_VERBOSE_LOG:-1}
    expose:
      - 3001
    networks:
      - default
    volumes:
      - ./.sequelizerc:/signalboost/.sequelizerc
      - ./app:/signalboost/app
      - ./simulator:/signalboost/simulator
      - ./bin:/signalboost/bin
      - ./node_modules:/signalboost/node_modules
      - ./package.json:/signalboost/package.json
      - ./yarn.lock:/signalboost/yarn.lock
      - loadtest_sender_sock:/signalboost/sock/
    restart: unless-stopped

  sender_signalc:
    image: registry.0xacab.org/team-friendo/signalboost/signalc:latest
    container_name: loadtest_sender_signalc
    entrypoint: /signalc/bin/entrypoint/signalc
    env_file: .env.dev
    environment:
      SIGNALC_ENV: ${SIGNALC_ENV:-load}
      SIGNALC_DB_NAME: loadtest_sender_signalc
      GRADLE_USER_HOME: /home/gradle/.gradle
      LOG_LEVEL: ${LOG_LEVEL:-debug}
      DEBUG_MODE: ${DEBUG_MODE:-0}
      DB_HOST: db
    depends_on:
      - db
    ports:
      - 0.0.0.0:5006:5005 # for remote debugger
    volumes:
      - ./signalc/src:/signalc/src
      - ./signalc/build.gradle.kts:/signalc/build.gradle.kts
      - ./signalc/gradle.properties:/signalc/gradle.properties
      - ./signalc/settings.gradle.kts:/signalc/settings.gradle.kts
      - ./signalc/migrations:/signalc/migrations
      - ./bin:/signalc/bin
      - loadtest_sender_signalc_gradle_cache:/home/gradle/.gradle
      - loadtest_sender_signalc_build_cache:/signalc/build
      - loadtest_sender_sock:/signalc/sock
    restart: unless-stopped

  sender_signald:
    image: registry.0xacab.org/team-friendo/signalboost/signald-staging:latest
    container_name: loadtest_sender_signald
    env_file: .env.dev
    environment:
      SIGNALD_VERBOSE_LOG: ${SIGNALD_VERBOSE_LOG:-1}
    networks:
      - default
    expose:
      - 1312
    ports:
      - 0.0.0.0:9010:9010
      - 0.0.0.0:8017:8016
    volumes:
      - ./bin:/signalboost/bin
      - ./signald/jmx:/var/lib/jmx
      - loadtest_signald_data:/var/lib/signald/data
      - loadtest_sender_sock:/var/run/signald/
    restart: unless-stopped
