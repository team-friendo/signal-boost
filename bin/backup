#!/bin/bash

set -euo pipefail

###################
# throat-clearing #
###################

# time
timestamp=`date "+%Y-%m-%d"`

# gpg
keyring_path="/srv/signalboost/keyrings/live/pubring.kbx"
encrypt="gpg --encrypt --keyring ${keyring_path} --trust-model always -r 0E2A840B -r 97B47404 -r 1FADCB4B"

# paths
project_root="/srv/signalboost"
backup_dir="/srv/signalboost/backups/${timestamp}"

# make the folder for this backup
mkdir -p ${backup_dir}

cd ${project_root}
echo "--- running backups from project root: ${project_root}..."

#############
# backup db #
#############

echo "--- backing up db at $timestamp..."

down="docker-compose down"
up="docker-compose --env-file .env up -d db"
pg_dump="docker-compose --env-file .env exec -T db pg_dump -U postgres signalboost"
db_backup_path="${backup_dir}/sb_db_backup_${timestamp}.gpg"

${down}
${up}
${pg_dump} | ${encrypt} > ${db_backup_path}
${down}

echo "--- backed up db!"

###################
# backup keystore #
###################

echo "--- backing up keystore..."

keystore_backup_path="${backup_dir}/sb_keystore_backup_${timestamp}.tar.gpg"
keystore_volume_path="/var/lib/docker/volumes/signalboost_signal_data/_data"

cd ${keystore_volume_path}
tar cz . | ${encrypt} > ${keystore_backup_path}

echo "--- backed up keystore!"

######################### 
# scp backups to target #
#########################

echo "--- moving backups to target..."

keypath=/root/.ssh/id_sb_deploy
target_dir="/srv/backups"

echo "--- scp-ing to backup dir..."

# here, we use the `sb_backup` host defined in /root/.ssh/config
scp -i ${keypath} -rp ${backup_dir} sb_backup:${target_dir}

echo "--- removing old backups from remote..."

# remove old backups on remote
ssh -i ${keypath} sb_backup "find $target_dir/* -type d -not -name ${timestamp} -exec rm -rv {} +"

# remove local backup
rm -rf ${backup_dir}

echo "--- backups moved to target!"

###############
# restart app #
###############

echo "--- restarting app..."

cd ${project_root}
docker-compose --env-file .env up -d

echo "--- app restarted!"
